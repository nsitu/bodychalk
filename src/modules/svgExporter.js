export class SVGExporter {
    static createExportableSVG(cameraManager, options = {}) {
        try {
            const svg = document.getElementById('svg');
            const bodyPathElement = document.getElementById('bodyPath');

            if (!svg || !bodyPathElement) {
                return null;
            }

            // Get the current path data
            const pathData = bodyPathElement.getAttribute('d');

            if (!pathData || pathData === '') {
                return null;
            }

            // Get the current stroke color from CSS variable
            const computedStyle = getComputedStyle(svg);
            const currentColor = computedStyle.getPropertyValue('--stroke-color').trim() || '#00ff00';

            // Clone the SVG content with proper structure
            const svgContent = SVGExporter.generateSVGContent({
                width: cameraManager.videoWidth,
                height: cameraManager.videoHeight,
                pathData: pathData,
                strokeColor: currentColor,
                cameraMode: cameraManager.currentFacingMode,
                shouldMirror: cameraManager.currentFacingMode === 'user',
                timestamp: new Date().toISOString(),
                ...options
            });

            return {
                svgContent,
                pathData: pathData,
                strokeColor: currentColor,
                cameraMode: cameraManager.currentFacingMode,
                timestamp: new Date().toISOString(),
                width: cameraManager.videoWidth,
                height: cameraManager.videoHeight
            };
        } catch (error) {
            console.error('Failed to create exportable SVG:', error);
            return null;
        }
    }

    static generateSVGContent({
        width,
        height,
        pathData,
        strokeColor = '#00ff00',
        cameraMode,
        shouldMirror = false,
        timestamp,
        title = 'Body Chalk Outline',
        description = 'Vector body outline generated by bodychalk',
        source = 'bodychalk app'
    }) {
        // Create the group with appropriate transform
        const groupTransform = shouldMirror ? `translate(${width}, 0) scale(-1, 1)` : '';
        const groupElement = groupTransform ?
            `<g transform="${groupTransform}">` :
            '<g>';

        return `<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" 
     width="${width}" 
     height="${height}" 
     viewBox="0 0 ${width} ${height}">
  <defs>
    <style>
      .body-outline {
        stroke: ${strokeColor};
        stroke-width: 3;
        fill: none;
        stroke-linejoin: round;
        stroke-linecap: round;
        filter: drop-shadow(0 0 5px ${strokeColor});
      }
    </style>
  </defs>
  <metadata>
    <title>${title}</title>
    <description>${description}</description>
    <created>${timestamp}</created>
    <camera>${cameraMode}</camera>
    <stroke-color>${strokeColor}</stroke-color>
    <source>${source}</source>
  </metadata>
  ${groupElement}
    <path d="${pathData}" class="body-outline"/>
  </g>
</svg>`;
    }
}
